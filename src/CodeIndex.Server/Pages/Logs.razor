@page "/Logs"
@inject HttpClient Client
@inject IJSRuntime JSRuntime
@inject CodeIndexConfiguration Config

<h3>Logs</h3>
<div class="input-group mb-3">
    <button class="btn btn-success btn-sm" @onclick="RefreshLogs">Refresh</button>
    <label class="m-1">Fetch Result: @Result?.Status?.Success @Result?.Status?.StatusDesc</label>
</div>
<div class="form-group">
    <textarea class="form-control" id="textAreaForLogs" rows="20">@Result?.Result</textarea>
</div>

@code {
    FetchResult<string> Result { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Result = await GetLogs();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        await JSRuntime.InvokeVoidAsync("ScrollTextAreaToBottom", "textAreaForLogs");
    }

    bool refreshing;

    async Task RefreshLogs()
    {
        try
        {
            if (refreshing)
            {
                return;
            }

            if (Result != null)
            {
                Result.Result = "Refreshing...";
            }

            refreshing = true;
            Result = await GetLogs();
        }
        finally
        {
            refreshing = false;
        }
    }

    async Task<FetchResult<string>> GetLogs()
    {
        return await Client.GetJsonAsync<FetchResult<string>>($"{Config.LocalUrl}api/lucene/GetLogs");
    }
}
